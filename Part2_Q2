#include <bits/stdc++.h>
using namespace std;

int main(){
    vector<char> tasks = {'A','A', 'A', 'B', 'B','B'};
    int n = 2;
    unordered_map<char , int> frequencies;
    for (auto task : tasks) {
        frequencies[task]++;
    }
    vector<pair<char, int>> tasksFreqs(frequencies.begin(), frequencies.end());
    sort(tasksFreqs.begin(), tasksFreqs.end(),[](pair<char, int> a,pair<char, int> b) {
        return a.second > b.second;
    });

    int maxFreq = tasksFreqs[0].second ;
    int emptySlots = (maxFreq - 1) * n ;
    int neededSlots = (maxFreq - 1) * (n + 1) + 1 ;

    for (int i = 1; i < tasksFreqs.size(); ++i) {
        auto currentElement = tasksFreqs[i];
        if (emptySlots == 0){
            neededSlots+= currentElement.second;
            continue;
        }
        if (currentElement.second == maxFreq){
            emptySlots-= currentElement.second - 1;
            neededSlots++;
        } else{
            if (currentElement.second <= emptySlots){
                emptySlots-= currentElement.second;
            } else{
                neededSlots+= currentElement.second - emptySlots ;
                emptySlots = 0 ;
            }
        }
    }
    cout << neededSlots ;
    return 0;
}
