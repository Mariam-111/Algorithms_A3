
#include <iostream>
#include <vector>

using namespace std;

int main() {
    int timeCapacity , w , n;
    cin >> timeCapacity >> w >> n;
    int depth[n] , goldQuantity[n] , t[n] , dp[timeCapacity +1] = {0};
    for (int i = 0; i < n; i++) {
        cin >> depth[i] >> goldQuantity[i];
    }
    for (int i = 0; i < n; i++) {
        // time for eltlo3 , elnzol
        t[i] = 3*depth[i]*w;
        for (int j = timeCapacity ; j >= t[i]; j--) {
            //ba5od el max ben elly ana feh , elly a2l mn t + gold
            dp[j] = max(dp[j], dp[j-t[i]] + goldQuantity[i]);
        }
    }
    cout << dp[timeCapacity] << endl;

    vector<pair<int, int> > result;

    //check every treasure ex: dp[210] == dp[210 -120]+5  
    for (int i = 0; i < n; i++) {
        if(dp[timeCapacity] == (dp[timeCapacity - t[i]] + goldQuantity[i])) {
            result.push_back(make_pair(depth[i], goldQuantity[i]));
        }
    }
    cout << result.size() << endl;
     for (int i = 0; i < result.size(); i++) {
         cout << result[i].first << " " << result[i].second << endl;
     }

    
    return 0;
}
